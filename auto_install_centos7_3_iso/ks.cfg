# Kickstart file automatically generated by anaconda.
# version=DEVEL

#-------------------------------------------------------------------------------
# Command section --- must include the required options.
#-------------------------------------------------------------------------------

# Text mode or graphical mode?
text
firstboot --disable

# Install or upgrade?
install

# Use CDROM installation media
cdrom

# Network information
# network --onboot yes --device eth0 --bootproto dhcp --noipv6
# network --hostname=localhost.localdomain

# System authorization information
auth --enableshadow --passalgo=sha512

# Root password
rootpw --iscrypted $6$tbGvXZz7E2ZHKiFw$krdZKp7WUY4iNierOFh4ZbV1FhroTuomNr71.0Ns52xARVrfr39DnU64sHqZv/K2iWUvMw0cI6DO64VgQWYRg0

# System services，禁用chronyd，防止与ntpd冲突
services --disabled="chronyd"

# System timezone
timezone Asia/Shanghai

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Firewall configuration
firewall --disabled

# SELinux configuration
selinux --disabled

# Installation logging level
logging --level=info

# Reboot after installation
reboot

#-------------------------------------------------------------------------------
# The %pre sections
#-------------------------------------------------------------------------------
%include /tmp/part-include
%pre
#!/bin/sh

#-------------------------------------------------------------------------------
# 非超微4U4Node机型时，设置系统盘标示符： 如果只有一个磁盘，则不论磁盘大小多大；
# 如果有多个磁盘，则按自定义的规则选择系统安装盘
#-------------------------------------------------------------------------------
function get_osdisk() {
    disk_count=$(fdisk -l | grep "Disk /dev/${osdisk_prefix}" | wc -l)
    if [ ${disk_count} -eq 1 ]; then
        osdisk=$(fdisk -l | grep "Disk /dev/${osdisk_prefix}" | cut -d: -f1 | cut -d/ -f3)
    else
        osdisk=$(fdisk -l | grep "Disk /dev/${osdisk_prefix}" | awk '{if ($3 >=50 && $3 < 2000) print $0}' | cut -d: -f1 | cut -d/ -f3)
    fi
}

#-------------------------------------------------------------------------------
# 设置swap大小，如果内存mem<=2G，则swap设置为与物理内存大小一样；
# 如果内存2G<mem<=16G，swap=8G； 如果内存mem>16G，则swap=16G
# 注意：/proc/meminfo中单位是kb，而kickstart中指定swap大小时单位是mb
#-------------------------------------------------------------------------------
function get_swap() {
    act_mem=$(cat /proc/meminfo | grep MemTotal | awk '{print $2}')
    if [ ${act_mem} -le $((2*1024*1024)) ]; then
        swap_size=$((2*1024))
    elif [ ${act_mem} -gt $((2*1024*1024)) ] && [ ${act_mem} -le $((16*1024*1024)) ]; then
        swap_size=$((8*1024))
    else
        swap_size=$((16*1024))
    fi
}

#-------------------------------------------------------------------------------
# 如果是超微4U4Node机型，使用了主板自带的BIOS RAID set
# 假设创建RAID 1的名称为Volume0，则它的磁盘标示符为Volume0_0，是/dev/md126的软连接
# 如果不是超微4U4Node机型，且有SATA或SCSI磁盘，则不论是否还有IDE磁盘，都使用sdx；
# 如果仅有IDE磁盘，则使用hdx
#-------------------------------------------------------------------------------
if $(grep -q 'md.*$' /proc/partitions); then
    osdisk="Volume0_0"
    get_swap    # 调用函数
elif $(grep -q 'sd.*$' /proc/partitions); then
    osdisk_prefix='sd'
    get_osdisk  # 调用函数
    get_swap    # 调用函数
elif $(grep -q 'hd.*$' /proc/partitions); then
    osdisk_prefix='hd'
    get_osdisk  # 调用函数
    get_swap    # 调用函数
else
    print "Lost disks, please install disks first!"
    exit 1
fi

#-------------------------------------------------------------------------------
# 生成/tmp/part-include临时文件
#-------------------------------------------------------------------------------
cat >> /tmp/part-include << EOF
# System bootloader configuration
bootloader --location=mbr --boot-drive=${osdisk}
# Partition clearing information
clearpart --all --initlabel
# Clear the Master Boot Record
zerombr
# Disk partitioning information
part biosboot --fstype="biosboot" --ondisk=${osdisk} --size=1  # 当磁盘大于2T时，以BIOS方式安装CentOS到GPT分区表的磁盘，需要创建1MB的biosboot分区
part /boot --fstype="xfs" --ondisk=${osdisk} --size=500
part pv.01 --fstype="lvmpv" --ondisk=${osdisk} --size=1 --grow
volgroup centos --pesize=4096 pv.01
logvol swap  --fstype="swap" --size=${swap_size} --name=swap --vgname=centos
logvol /  --fstype="xfs" --grow --maxsize=102400 --size=1024 --name=root --vgname=centos
EOF

%end

#-------------------------------------------------------------------------------
# The %packages section
#-------------------------------------------------------------------------------
%packages
@^web-server-environment
@base
@core
@java-platform
@python-web
@web-server
kexec-tools
expect
screen

%end

# 启用kdump
%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

#-------------------------------------------------------------------------------
# The %post sections
#-------------------------------------------------------------------------------
%post
#!/bin/sh
# 设置Bash Color
echo 'PS1="\[\e[32;1m\][\u@\h \W]\\$ \[\e[0m\]"' >> /root/.bashrc
. /root/.bashrc

%end

